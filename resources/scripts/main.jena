import = source("resources/scripts/import.jena") =>
storage = import.storage.file[]() =>
window = import.window.new[]() =>
time = import.time.new[]() =>
status = import.frameUpdateStatus.new[]() =>
screenWidth = box 1200 =>
screenHeight = box 800 =>
math =
{
    .float:f -> import.floatFunc.of[import.float] f,
    .float2:xy -> import.vector2.newXY[import.float, import.float] xy,
    .float3:xyz -> import.vector3.newXYZ[import.float, import.float, import.float] xyz,
} =>
windowStart =
(
    windowId ->
    (
        gl = source "resources/scripts/opengl.jena" =>
        shaderLoader = import.shader.loader[import.storage, import.opengl][storage, gl] =>
        skinShader = shaderLoader.load[import.string, import.string]["resources/shaders/diffuse_skin_vertex.glsl", "resources/shaders/diffuse_fragment.glsl"] =>
        diffuseShader = shaderLoader.load[import.string, import.string]["resources/shaders/diffuse_vertex.glsl", "resources/shaders/diffuse_fragment.glsl"] =>
        
        graphics = import.graphics.collada
        [
            import.opengl,
            import.shader,
            import.shader,
            import.storage,
            import.updateStatus
        ][
            gl,
            diffuseShader,
            skinShader,
            storage,
            status
        ] =>
        in =
        {
            .mouse:(source "resources/scripts/mouse.jena" [windowId, status]),
            .keyboard:(source "resources/scripts/keyboard.jena" [windowId, status]),
        } =>
        scene = source "resources/scripts/scene.jena" import
        {
            .graphics:graphics,
            .keyboard:(in.keyboard),
            .mouse:(in.mouse),
            .math:math,
            .screenWidth:() -> screenWidth.get,
            .screenHeight:() -> screenHeight.get,
        } =>
        windowLoop = width -> height ->
        [
            status.update[](),
            screenWidth.set width,
            screenHeight.set height,
            scene.update(scene.init),
        ] =>
        args -> windowLoop (args 0) (args 1)
    )
)
=>
window.run[import.int, import.int, import.windowStartAction][screenWidth.get, screenHeight.get, windowStart]